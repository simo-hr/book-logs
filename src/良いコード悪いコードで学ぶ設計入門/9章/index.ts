/**
 * 設計の健全性をそこなうもの
 *
 * デットコード: 実行されないコード
 * YAGNI原則: 将来のために予測されて実装されたコード
 * マジックナンバー: 意図や意味がわからない数値、実装者しか意味がわからない数値
 * グローバル変数
 * NULL: nullはメモリアクセストラブルを回避するためにできた仕組みという背景があり、システム上て未設定や未定義な状態を表すために使うのはnullバグを引き起こす原因になる
 * 例外の握り潰し: 外部からエラー検知できなくなり、不正なデータがつくられたりする原因になる。
 * メタプログラミング（黒魔術）: プログラム構造自体を制御するプログラミング。
 * 技術駆動パッケージング: 関係し合うファイル同士がわかりづらく、ファイル同士で低凝集になってしまう
 * サンプルコードのコピペ: あくまで言語仕様や機能性を説明するためのコードであり、保守性や変更容易性を考慮されていないパターンが多いため、そのまま使うのはNG
 *
 */